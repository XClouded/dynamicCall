package cn.uc.gamesdk.util;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.content.res.AssetManager;
import android.util.Log;

public class ReleaseJar {

	private static final String CLASS_NAME = "ReleaseJar";

	private static final String jarList = "jars/jarList.json";

	public static void getJarsList() {
		String str = "['assets/jars/core.jar', 'jars/update.jar']";

		try {
			JSONArray jarListArray = new JSONArray(str);
			for (int i = 0; i < jarListArray.length(); i++) {
				JSONObject jar = jarListArray.getJSONObject(i);
				Log.d(CLASS_NAME, jar.toString());
			}
		} catch (JSONException e) {
			e.printStackTrace();
		}

	}
/*
	public static boolean releaseJar() {

		File dest = new File(destPath);
		if (!dest.exists())
			dest.mkdirs();

		AssetManager assetManager = this.getAssets();
		try {

			String baseFolder = "jar";
			String[] assetList = assetManager.list(baseFolder);

			int size;
			byte[] buffer = new byte[1024];
			for (final String file : assetList) {
				if (file.endsWith(JAR_POSTFIX)) {

					InputStream input = assetManager.open(baseFolder
							+ File.separator + file);
					File outputFile = new File(sourcePath + file);
					outputFile.createNewFile();
					FileOutputStream output = new FileOutputStream(outputFile);

					while ((size = input.read(buffer)) > 0) {
						output.write(buffer, 0, size);
					}
					input.close();
					output.close();

				}
			}
		} catch (IOException e) {
			e.printStackTrace();
			return false;
		} catch (RuntimeException ex) {
			ex.printStackTrace();
			return false;
		}
		return true;
	}*/
}
