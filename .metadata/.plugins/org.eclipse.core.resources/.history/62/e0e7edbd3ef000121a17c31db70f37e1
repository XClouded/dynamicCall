package cn.uc.gamesdk.core;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import cn.uc.gamesdk.iconst.CApi;
import cn.uc.gamesdk.iface.IActivityControl;
import cn.uc.gamesdk.iface.IDexClassLoader;
import cn.uc.gamesdk.iface.IDispatcher;
import cn.uc.gamesdk.ilistener.SdkCallbackListener;
import cn.uc.gamesdk.layout.ActivityLayout;

public class Dispatcher implements IDispatcher {
	private static final String CLASS_NAME = "DISPATCHER FROM CORE";

	private static Dispatcher _dispatcher = null;
	private static IDexClassLoader _classLoader = null;

	private SdkCallbackListener sdkCallBackListener = null;

	public static Dispatcher getInstance() {
		if (null == _dispatcher)
			_dispatcher = new Dispatcher();

		return _dispatcher;
	}

	@Override
	public boolean loadClass(String clazz) {
		return false;
	}

	@Override
	public void invokeActivity(IActivityControl activity) {
		Activity mainActivity = (Activity) activity;
		ActivityLayout layout = new ActivityLayout(mainActivity);
		mainActivity.setContentView(layout);
	}

	@Override
	public Bundle loadMethodFromClass(String apiName,Bundle data) {
		if (CApi.API_GET_SID.equals(apiName)) {
			Bundle result = new Bundle();
			data.putString("data", "this is from remote callback");
			sdkCallBackListener.callback(apiName, data);
			
		}
		return null;
	}
	
	@Override
	public Bundle loadMethodFromClass(String apiName) {
		loadMethodFromClass(apiName,null);
		return null;
	}

	@Override
	public void registerCallback(SdkCallbackListener listener) {
		Log.d(CLASS_NAME,"set callback");
		sdkCallBackListener = listener;
	}

	public SdkCallbackListener getRegisterCallback() {
		return sdkCallBackListener;
	}


}
