package cn.uc.gamesdk;

import java.io.File;
import java.util.HashMap;
import java.util.Map;

import cn.uc.gamesdk.entity.DexClassPath;
import cn.uc.gamesdk.iface.IDexClassLoader;
import cn.uc.gamesdk.tools.FileUtil;
import cn.uc.gamesdk.tools.GlobalVars;

public class DexClassLoader implements IDexClassLoader {
	public static final String API_LOGIN = "login";
	public static final String API_INIT = "init";
	public static final String API_UPDATE = "update";

	private static Map<String, DexClassPath> dexPathMap = null;
	private static Map<String, DexClassLoader> dexLoaderMap = null;

	private static DexClassLoader dexClassLoader = null;// 保存加载dex的对象

	public static DexClassLoader getInstance() {
		if (null == dexClassLoader)
			dexClassLoader = new DexClassLoader();

		return dexClassLoader;

	}

	public void Creator(String apiName) {
		if (null == dexPathMap)
			init();

		if (dexPathMap.containsKey(apiName)) {
			DexClassPath dexClass = dexPathMap.get(apiName);
			String className = dexClass.classPath;
			String dexName = dexClass.dexPath;

			DexClassLoader classLoader;
			if (dexLoaderMap.containsKey(dexName)) {
				classLoader = dexLoaderMap.get(dexName);
			} else {
				classLoader = new DexClassLoader(FileUtil.getFilePath()
						+ File.separator + dexName, FileUtil.getCachePath(),
						null, GlobalVars.context.getClassLoader());
			}
		}
	}

	private void init() {
		dexPathMap = new HashMap<String, DexClassPath>();
		dexLoaderMap = new HashMap<String, DexClassLoader>();

		DexClassPath core = new DexClassPath();
		core.classPath = "cn.uc.gamesdk.core.Dispatch";
		core.dexPath = "core";

		DexClassPath update = new DexClassPath();
		update.classPath = "cn.uc.gamesdk.update.Dispatch";
		core.dexPath = "update";

		dexPathMap.put(API_LOGIN, core);
		dexPathMap.put(API_INIT, core);
		dexPathMap.put(API_UPDATE, update);
	}
}
