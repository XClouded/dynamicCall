package cn.uc.gamesdk;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Map;

import android.app.Activity;
import android.content.res.AssetManager;
import cn.uc.gamesdk.entity.DexClassPath;
import cn.uc.gamesdk.iface.IDexClassLoader;

public class DexClassLoader implements IDexClassLoader {
	public static final String API_LOGIN = "login";
	public static final String API_INIT = "init";
	public static final String API_UPDATE = "update";

	private static Map<String, DexClassPath> dexPathMap = null;

	private static DexClassLoader dexClassLoader = null;

	public static DexClassLoader getInstance() {
		if (null == dexClassLoader)
			dexClassLoader = new DexClassLoader();

		return dexClassLoader;

	}

	public void Creator(String apiName) {
		if (null == dexPathMap)
			init();

		if (dexPathMap.containsKey(apiName)) {
			DexClassPath dexClass = dexPathMap.get(apiName);
			
            DexClassLoader classLoader = new DexClassLoader(destPath + dexName, ctx.getCacheDir().getAbsolutePath(), null, ctx.getClassLoader());
            Class libProviderClass = null;
            try {
                libProviderClass = classLoader.loadClass(className);
                Method method = libProviderClass.getDeclaredMethod("showFloatButton", new Class[] { Activity.class });
                method.invoke(null, DexLoaderActivity.this);
		}
	}

	private void init() {
		dexPathMap = new HashMap<String, DexClassPath>();

		DexClassPath core = new DexClassPath();
		core.classPath = "cn.uc.gamesdk.core.Dispatch";
		core.dexPath = "core";

		DexClassPath update = new DexClassPath();
		update.classPath = "cn.uc.gamesdk.update.Dispatch";
		core.dexPath = "update";

		dexPathMap.put(API_LOGIN, core);
		dexPathMap.put(API_INIT, core);
		dexPathMap.put(API_UPDATE, update);
	}


}
