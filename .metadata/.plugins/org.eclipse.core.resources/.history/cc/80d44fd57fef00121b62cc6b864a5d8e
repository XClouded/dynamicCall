/*
       Licensed to the Apache Software Foundation (ASF) under one
       or more contributor license agreements.  See the NOTICE file
       distributed with this work for additional information
       regarding copyright ownership.  The ASF licenses this file
       to you under the Apache License, Version 2.0 (the
       "License"); you may not use this file except in compliance
       with the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing,
       software distributed under the License is distributed on an
       "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
       KIND, either express or implied.  See the License for the
       specific language governing permissions and limitations
       under the License.
*/
package cn.uc.gamesdk.bridge.api;

import java.util.HashMap;
import java.util.Stack;

import android.content.BroadcastReceiver;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.res.AssetManager;
import android.content.res.Resources;
import android.database.Cursor;
import android.net.Uri;


/**
 * The Cordova activity abstract class that is extended by WebBridge.
 * It is used to isolate plugin development, and remove dependency on entire Cordova library.
 */
public interface BridgeInterface {

    /**
     * Send JavaScript statement back to JavaScript.
     * 
     * @param message
     */
    abstract public void sendJavascript(String statement);
    

    /**
     * Load the specified URL in the Cordova webview.
     * 
     * @param url				The URL to load.
     */
    abstract public void loadUrl(String url);
    
    public abstract Resources getResources();

    public abstract String getPackageName();

    public abstract Object getSystemService(String service);

    public abstract Context getContext();
    
    public abstract Context getBaseContext();

    public abstract Intent registerReceiver(BroadcastReceiver receiver,
            IntentFilter intentFilter);

    public abstract ContentResolver getContentResolver();

    public abstract void unregisterReceiver(BroadcastReceiver receiver);

    public abstract Cursor managedQuery(Uri uri, String[] projection, String selection,
        String[] selectionArgs, String sortOrder);
    
    public abstract void runOnUiThread(Runnable runnable);

    public abstract AssetManager getAssets();

    public abstract void clearBridgeHistory();

    public abstract boolean backHistory();

    public abstract void showWebPage(String url, boolean openExternal,
            boolean clearHistory, HashMap<String, Object> params);

    public abstract Context getApplicationContext();

    public abstract boolean isUrlWhiteListed(String source);
    
    public abstract void finish();
    
    public abstract void onUpdateWebviewHistory();
    
    public abstract Stack<String> getUrls();
    
    public abstract String getCurrentDomain();

    public abstract void bindBackButton(boolean override);
 
}
